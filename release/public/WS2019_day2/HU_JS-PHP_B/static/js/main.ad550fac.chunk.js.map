{"version":3,"sources":["Skeleton/Footer/Footer.js","config.js","Skeleton/Header/Header.js","Skeleton/Main/Main.js","Components/AgendaTable/AgendaTable.js","Pages/Agenda/Agenda.js","Components/EventCard/EventCard.js","Pages/EventsList/EventsList.js","Pages/Login/Login.js","Components/Ticket/Ticket.js","Pages/Register/Register.js","Pages/Session/Session.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","urlFactory","route","token","getRoute","fetch","then","resp","json","postRoute","body","method","headers","JSON","stringify","Header","goToScreen","logout","user","isLoggedIn","onClick","role","username","Main","children","AgendaTable","event","selectSession","selectedIds","channels","map","channel","name","rooms","room","sessions","session","selected","type","includes","id","title","Agenda","useState","setEvent","regs","setRegs","useMemo","ev","find","row","session_ids","useEffect","data","message","alert","registrations","parts","window","location","pathname","split","organizerSlug","length","eventSlug","EventCard","organizer","slug","date","EventsList","events","setEvents","Login","login","lastname","setLastname","code","setCode","error","setError","onSubmit","e","preventDefault","stopPropagation","registration_code","Promise","resolve","history","back","htmlFor","placeholder","value","onChange","target","Ticket","ticket","selectedTicket","setSelectedTicket","extra","available","description","select","classes","checked","cost","Register","selectedWs","setSelectedWs","workshops","ws","forEach","c","r","filter","s","push","ticketPrice","wsPrice","reduce","sum","tickets","selectWs","ticket_id","submit","disabled","Session","setSession","sessionId","parseInt","speaker","start","end","App","screen","setScreen","setUser","localStorage","getItem","parse","setCurrentScreen","basePath","process","replace","origin","addEventListener","removeEventListener","undefined","removeItem","useCallback","newScreen","pushState","Page","Noop","props","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad550fac.chunk.js","sourcesContent":["export function Footer() {\n    return <footer className=\"bg-dark text-white p-3 mt-3 text-center\">\n        <small>&copy; Copyright 2021 - All rights reserved.</small>\n    </footer>\n}\n","export const urlFactory = (route, token) => `http://192.168.56.99/HU_JS-PHP_A/api/v1/${route}${token ? `?token=${token}` : ''}`;\n\nexport const getRoute = (route, token) => fetch(urlFactory(route, token)).then(resp => resp.json());\nexport const postRoute = (route, token, body) => fetch(urlFactory(route, token), {\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n}).then(resp => resp.json());","import { postRoute } from \"../../config\"\n\nexport function Header({ goToScreen, logout, user, isLoggedIn }) {\n    const _logout = () => {\n        postRoute(\"logout\", user.token).then(() => logout())\n    }\n\n    return <header className=\"sticky-top shadow-sm\">\n        <nav className=\"navbar navbar-light bg-light\">\n            <div className=\"container-fluid d-flex justify-content-between align-items-center\">\n                <div onClick={() => goToScreen(\"/\")} role=\"button\">\n                    <h1 className=\"navbar-brand m-0\">Event Booking Platform</h1>\n                </div>\n\n                {!isLoggedIn && <div>\n                    <button className=\"btn btn-outline-secondary login-btn\" onClick={() => goToScreen(\"/login\")}>Login</button>\n                </div>}\n\n                {isLoggedIn && <div className=\"d-flex justify-content-center align-items-center\">\n                    <span className=\"mr-3\">{ user.username }</span>\n                    <button className=\"btn btn-outline-secondary text-dark logout-btn\" onClick={() => _logout()}>Logout</button>\n                </div>}\n            </div>\n        </nav>\n    </header>\n}\n","export function Main({ children }) {\n    return <main className=\"flex-fill mt-5 container\">{ children }</main>\n}\n","export function AgendaTable({ event, selectSession, isLoggedIn, selectedIds }) {\n    return <div>\n        <div className=\"row no-gutters clock\">\n            <div className=\"col-4\"></div>\n            <div className=\"col-2\">9:00</div>\n            <div className=\"col-2\">11:00</div>\n            <div className=\"col-2\">13:00</div>\n            <div className=\"col-2\">15:00</div>\n        </div>\n        {event.channels.map(channel => <div className=\"row border no-gutters\" key={channel.id}>\n            <div className=\"col-2 border-right p-2 channel\">\n                {channel.name}\n            </div>\n            <div className=\"col-10\">\n                {channel.rooms.map(room => <div className=\"row no-gutters\" key={room.id}>\n                    <div className=\"col-2 border-right p-2 room\">{room.name}</div>\n                    <div className=\"col-10 d-flex\">\n                        {room.sessions.map(session => {\n                            const selected = isLoggedIn && (session.type === 'talk' || selectedIds.includes(session.id))\n                            return <div className={`p-2 m-1 agenda-item session ${selected ? 'registered' : ''}`} key={session.id}\n                                onClick={() => selectSession(session.id)} role=\"button\">{session.title}</div>\n                        })}\n                    </div>\n                </div>)}\n            </div>\n        </div>)}\n    </div>\n}\n","import { useEffect, useMemo, useState } from \"react\"\nimport { AgendaTable } from \"../../Components/AgendaTable/AgendaTable\"\nimport { getRoute } from \"../../config\"\n\nexport function Agenda({ goToScreen, isLoggedIn, user }) {\n    const [event, setEvent] = useState()\n    const [regs, setRegs] = useState([])\n\n    // select session ids to that user registered\n    const selectedIds = useMemo(() => {\n        const ev = regs.find(row => row.event.id === event?.id)\n        return ev?.session_ids ?? []\n    }, [event, regs])\n\n    // register\n    const register = () => {\n        const parts = window.location.pathname.split('/')\n        const organizerSlug = parts[parts.length - 2]\n        const eventSlug = parts[parts.length - 1]\n\n        isLoggedIn ? goToScreen(`/register/${organizerSlug}/${eventSlug}`) : goToScreen('/login')\n    }\n\n    // select session\n    const selectSession = (id) => {\n        const parts = window.location.pathname.split('/')\n        const organizerSlug = parts[parts.length - 2]\n        const eventSlug = parts[parts.length - 1]\n\n        goToScreen(`/session/${organizerSlug}/${eventSlug}/${id}`)\n    }\n\n    // Load reg data if logged in\n    useEffect(() => {\n        if (isLoggedIn) {\n            getRoute(\"registrations\", user.token).then(data => {\n                if (data.message) {\n                    alert(data.message)\n                } else {\n                    setRegs(data.registrations)\n                }\n            })\n        }\n    }, [isLoggedIn, user])\n\n    // Load event data\n    useEffect(() => {\n        const parts = window.location.pathname.split('/')\n        const organizerSlug = parts[parts.length - 2]\n        const eventSlug = parts[parts.length - 1]\n\n        getRoute(`organizers/${organizerSlug}/events/${eventSlug}`).then(data => {\n            if (data.message) {\n                alert(data.message)\n            } else {\n                setEvent(data)\n            }\n        })\n    }, [])\n\n    if (!event) return <></>\n\n    return <div>\n        <div className=\"d-flex justify-content-between align-items-center\">\n            <h2>{event.name}</h2>\n            <button className=\"btn btn-outline-secondary\" id=\"register\" onClick={register}>Register for this event</button>\n        </div>\n\n        <div className=\"mt-3\">\n            <AgendaTable event={event} selectSession={selectSession} isLoggedIn={isLoggedIn} selectedIds={selectedIds} />\n        </div>\n    </div>\n}\n","export function EventCard({ event, goToScreen }) {\n    return <div className=\"border p-3 mb-4 bg-light card-hover event\" onClick={() => goToScreen(`/event/${event.organizer.slug}/${event.slug}`)} role=\"button\">\n        <h2 className=\"m-0 mb-2\">{event.name}</h2>\n        <p className=\"m-0\">{event.organizer.name}, {event.date}</p>\n    </div>\n}\n","import { useEffect, useState } from \"react\"\nimport { EventCard } from \"../../Components/EventCard/EventCard\"\nimport { getRoute } from \"../../config\"\n\nexport function EventsList({ goToScreen }) {\n    const [events, setEvents] = useState([])\n\n    useEffect(() => {\n        getRoute(\"events\").then(({ events }) => setEvents(events))\n    }, [])\n\n    return <div>\n        {events.map(event => <EventCard event={event} goToScreen={goToScreen} key={event.id} />)}\n    </div>\n}\n","import { useState } from \"react\"\nimport { postRoute } from \"../../config\";\n\nexport function Login({ login }) {\n    const [lastname, setLastname] = useState(\"\");\n    const [code, setCode] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const submit = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        postRoute(\"login\", \"\", { lastname, registration_code: code }).then(data => {\n            if (data.message) {\n                setError(\"Lastname or registration code not correct\")\n            } else {\n                setLastname(\"\")\n                setCode(\"\")\n                setError(\"\")\n                login(data)\n                // this should be inside this promise to trigger history back in next render circle\n                Promise.resolve().then(() => window.history.back())\n            }\n        })\n    }\n\n    return <div>\n        <h2 className=\"mb-3\">Login</h2>\n        {error && <div className=\"alert alert-danger my-4\" role=\"alert\">\n            {error}\n        </div>}\n        <form onSubmit={submit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"lastname\">Lastname</label>\n                <input type=\"text\" className=\"form-control\" id=\"lastname\" placeholder=\"Lastname\"\n                    value={lastname} onChange={e => setLastname(e.target.value)} />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"registration_code\">Registration Code</label>\n                <input type=\"text\" className=\"form-control\" id=\"registration_code\" placeholder=\"Code\"\n                    value={code} onChange={e => setCode(e.target.value)} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-secondary\" id=\"login\">Login</button>\n        </form>\n    </div>\n}","import { useMemo } from \"react\"\n\nexport function Ticket({ ticket, selectedTicket, setSelectedTicket }) {\n    const extra = useMemo(() => {\n        if (!ticket.available) {\n            return \"unavailable\";\n        } else {\n            return ticket.description\n        }\n    }, [ticket])\n\n    const select = () => {\n        if (ticket.available) {\n            setSelectedTicket(ticket)\n        }\n    }\n\n    const classes = ticket.available ? \"card-hover bg-white cursor-pointer\" : \"bg-light disabled\"\n\n    return <div className={`p-3 border ticket row no-gutters d-flex align-items-center mx-2 ${classes}`} onClick={select}>\n        <div className=\"col-auto mr-3\">\n            <input type=\"radio\" name=\"ticket\" checked={selectedTicket === ticket} onChange={select} id={`ticket${ticket.id}`} />\n        </div>\n        <label className=\"col d-flex flex-column justify-content-center mb-0\" htmlFor={`ticket${ticket.id}`}>\n            <h3 className=\"h4 m-0\">{ticket.name} {ticket.cost}.-</h3>\n            {extra && <p className=\"m-0 mt-2\">{extra}</p>}\n        </label>\n    </div>\n}","import { useEffect, useMemo, useState } from \"react\"\nimport { Ticket } from \"../../Components/Ticket/Ticket\"\nimport { getRoute, postRoute } from \"../../config\"\n\nexport function Register({ user, goToScreen }) {\n    const [event, setEvent] = useState()\n    const [selectedTicket, setSelectedTicket] = useState()\n    const [selectedWs, setSelectedWs] = useState([])\n\n    // get the workshops as array\n    const workshops = useMemo(() => {\n        if (!event) return []\n\n        const ws = []\n        // go deep and gather workshops\n        event.channels.forEach(c => c.rooms.forEach(r => r.sessions.filter(({ type }) => type === \"workshop\").forEach(s => ws.push(s))))\n        return ws\n    }, [event])\n\n    // calculate the prices\n    const ticketPrice = selectedTicket ? selectedTicket.cost : 0;\n    const wsPrice = useMemo(() => selectedWs.reduce((sum, ws) => sum + ws.cost, 0), [selectedWs])\n\n    // select ws\n    const selectWs = (e, ws) => {\n        if (e.target.checked) {\n            setSelectedWs([...selectedWs, ws])\n        } else {\n            setSelectedWs(selectedWs.filter(({ id }) => id !== ws.id))\n        }\n    }\n\n    // on page load get event\n    useEffect(() => {\n        const parts = window.location.pathname.split('/')\n        const organizerSlug = parts[parts.length - 2]\n        const eventSlug = parts[parts.length - 1]\n\n        getRoute(`organizers/${organizerSlug}/events/${eventSlug}`).then(data => {\n            if (data.message) {\n                alert(data.message)\n            } else {\n                setEvent(data)\n            }\n        })\n    }, [])\n\n    const submit = () => {\n        const ticket_id = selectedTicket.id;\n        const session_ids = selectedWs.map(({ id }) => id)\n\n        const parts = window.location.pathname.split('/')\n        const organizerSlug = parts[parts.length - 2]\n        const eventSlug = parts[parts.length - 1]\n\n        postRoute(`organizers/${organizerSlug}/events/${eventSlug}/registration`, user.token, { ticket_id, session_ids }).then(data => {\n            if (data.message && data.message === \"Registration successful\") {\n                goToScreen(`/event/${organizerSlug}/${eventSlug}`)\n            } else {\n                alert(data.message)\n            }\n        })\n    }\n\n    if (!event) return <></>\n\n    return <div>\n        <div className=\"d-flex justify-content-between align-items-center\">\n            <h2>{event.name}</h2>\n        </div>\n\n        <div className=\"mt-3\">\n            <div className=\"row no-gutters\">\n                {event.tickets.map(ticket => <div key={ticket.id} className=\"col-4\">\n                    <Ticket ticket={ticket} selectedTicket={selectedTicket} setSelectedTicket={setSelectedTicket} />\n                </div>)}\n            </div>\n        </div>\n\n        <div className=\"mt-5\">\n            <h3 className=\"h5 mb-3 font-weight-bold\">Select additional workshops you want to book</h3>\n            {workshops.map(ws => <div className=\"form-check\" key={ws.id}>\n                <input className=\"form-check-input workshop\" type=\"checkbox\" value={ws.id} id={`ws${ws.id}`}\n                    checked={selectedWs.map(({ id }) => id).includes(ws.id)} onChange={e => selectWs(e, ws)} />\n                <label className=\"form-check-label\" htmlFor={`ws${ws.id}`}>\n                    {ws.title}\n                </label>\n            </div>)}\n        </div>\n\n        <div className=\"mt-5 row\">\n            <div className=\"col-8\"></div>\n            <div className=\"col-4\">\n                <h3 className=\"h5 mb-3 font-weight-bold\">Checkout</h3>\n                <div className=\"row\">\n                    <div className=\"col-9\">Event ticket</div>\n                    <div className=\"col-3\" id=\"event-cost\">{ticketPrice}.-</div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-9\">Additional workshops</div>\n                    <div className=\"col-3\" id=\"additional-cost\">{wsPrice}.-</div>\n                </div>\n                <div className=\"row border-top\">\n                    <div className=\"col-9\">Total</div>\n                    <div className=\"col-3\" id=\"total-cost\">{ticketPrice + wsPrice}.-</div>\n                </div>\n\n                <button className=\"btn btn-lg btn-outline-secondary mt-5\" id=\"purchase\"\n                    onClick={() => submit()} disabled={!ticketPrice}>Purchase</button>\n            </div>\n        </div>\n    </div>\n}\n","import { useEffect, useState } from \"react\"\nimport { getRoute } from \"../../config\"\n\nexport function Session() {\n    const [event, setEvent] = useState()\n    const [session, setSession] = useState()\n\n    useEffect(() => {\n        const parts = window.location.pathname.split('/')\n        const organizerSlug = parts[parts.length - 3]\n        const eventSlug = parts[parts.length - 2]\n        const sessionId = parseInt(parts[parts.length - 1], 10)\n\n        getRoute(`organizers/${organizerSlug}/events/${eventSlug}`).then(data => {\n            if (data.message) {\n                alert(data.message)\n            } else {\n                let session;\n                data.channels.forEach(c => c.rooms.forEach(r => r.sessions.forEach((s) => { if (s.id === sessionId) session = s })))\n                setSession(session)\n                setEvent(data)\n            }\n        })\n    }, [])\n\n    if (!event) return <></>\n\n    if (!session) return <p>Session not found</p>\n\n    return <div>\n        <h2>{session.title} - {session.type}</h2>\n        <p>{session.description}</p>\n        <div className=\"row\">\n            <div className=\"col-3 text-brown\">Speaker</div>\n            <div className=\"col-3\">{session.speaker}</div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-3 text-brown\">Start</div>\n            <div className=\"col-3\">{session.start}</div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-3 text-brown\">End</div>\n            <div className=\"col-3\">{session.end}</div>\n        </div>\n        {session.cost && <div className=\"row\">\n            <div className=\"col-3 text-brown\">Cost</div>\n            <div className=\"col-3\">{session.cost}.-</div>\n        </div>}\n    </div>\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Footer } from './Skeleton/Footer/Footer';\nimport { Header } from './Skeleton/Header/Header';\nimport { Main } from './Skeleton/Main/Main';\nimport { Agenda } from './Pages/Agenda/Agenda';\nimport { EventsList } from './Pages/EventsList/EventsList';\nimport { Login } from './Pages/Login/Login';\nimport { Register } from './Pages/Register/Register';\nimport { Session } from './Pages/Session/Session';\n\nfunction App() {\n  const [screen, setScreen] = useState();\n  const [user, setUser] = useState();\n\n  // on page onload, set user from localstorage and screen from url\n  useEffect(() => {\n    if (localStorage.getItem(\"user\")) {\n      setUser(JSON.parse(localStorage.getItem(\"user\")))\n    }\n\n    const setCurrentScreen = () => {\n      const basePath = process.env.PUBLIC_URL.replace(window.location.origin, \"\")\n      const parts = window.location.pathname.replace(basePath, \"\").split('/');\n      setScreen(parts[1])\n    }\n\n    setCurrentScreen()\n\n    window.addEventListener(\"popstate\", setCurrentScreen)\n\n    return () => window.removeEventListener(\"popstate\", setCurrentScreen)\n  }, [])\n\n  // handle login\n  const login = (user) => {\n    setUser(user)\n    localStorage.setItem(\"user\", JSON.stringify(user))\n  }\n\n  // handle logout\n  const logout = () => {\n    setUser(undefined)\n    localStorage.removeItem(\"user\")\n    goToScreen(\"/login\")\n  }\n\n  const isLoggedIn = useMemo(() => !!user, [user])\n\n  // routing\n  const goToScreen = useCallback((route) => {\n    const newScreen = route.split(\"/\")[1];\n\n    if (screen !== newScreen) {\n      setScreen(newScreen);\n      window.history.pushState(\"\", \"\", `${process.env.PUBLIC_URL}${route}`);\n    }\n  }, [screen])\n\n  // routing\n  const Page = useMemo(() => {\n    const Noop = () => <></>;\n\n    switch (screen) {\n      case undefined:\n        return Noop\n      case \"event\":\n        return (props) => <Agenda {...props} />\n      case \"session\":\n        return (props) => <Session {...props} />\n      case \"register\":\n        if (isLoggedIn) {\n          return (props) => <Register {...props} />\n        } else {\n          goToScreen(\"/login\")\n          return Noop\n        }\n      case \"login\":\n        return (props) => <Login {...props} />\n      default:\n        break;\n    }\n\n    return (props) => <EventsList {...props} />\n  }, [screen, isLoggedIn, goToScreen])\n\n  return (\n    <>\n      <Header goToScreen={goToScreen} logout={logout} isLoggedIn={isLoggedIn} user={user} />\n      <Main>\n        <Page login={login} logout={logout} isLoggedIn={isLoggedIn} user={user} goToScreen={goToScreen} />\n      </Main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}