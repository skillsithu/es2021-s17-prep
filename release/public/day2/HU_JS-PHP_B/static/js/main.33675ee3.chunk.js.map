{"version":3,"sources":["api.js","components/Header.js","pages/Agenda.js","pages/List.js","pages/Login.js","pages/Register.js","pages/Session.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","Header","isLoggedIn","setIsLoggedIn","history","useHistory","className","to","type","onClick","post","then","push","Agenda","params","useParams","useState","event","setEvent","useEffect","get","organizer","data","name","id","channels","map","channel","rooms","room","sessions","session","title","List","events","setEvents","date","Date","toDateString","sort","a","b","slug","Login","lastname","setLastname","code","setCode","onSubmit","e","preventDefault","stopPropagation","registration_code","htmlFor","placeholder","autoFocus","required","onChange","target","value","Register","ticket","setTicket","selectedWs","setSelectedWs","additionalCost","useMemo","reduce","sum","ws","parseInt","cost","ticketCost","workshops","forEach","tickets","disabled","available","description","workshop","includes","filter","s","ticket_id","session_ids","alert","Session","setSession","speaker","start","end","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33675ee3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: \"http://localhost/day2/HU_JS-PHP_A/api/v1\"\r\n});\r\n","import { Link, useHistory } from \"react-router-dom\";\r\nimport { api } from \"../api\";\r\n\r\nexport function Header({ isLoggedIn, setIsLoggedIn }) {\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    api.post(\"/logout\").then(() => {\r\n      setIsLoggedIn(false);\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header className=\"d-flex justify-content-between align-items-center py-2 px-4 bg-white border-bottom shadow-sm\">\r\n      <Link to=\"/\" className=\"text-decoration-none\">\r\n        <h3>Event Booking Platform</h3>\r\n      </Link>\r\n      {!isLoggedIn ? (\r\n        <Link to=\"/login\">\r\n          <button type=\"button\" className=\"btn btn-outline-primary login-btn\">\r\n            Login\r\n          </button>\r\n        </Link>\r\n      ) : (\r\n        <div>\r\n          <span className=\"mr-3\">Username</span>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-secondary login-btn\"\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { api } from \"../api\";\r\n\r\nexport function Agenda() {\r\n  // Use url params\r\n  const params = useParams();\r\n\r\n  // Store the event data\r\n  const [event, setEvent] = useState();\r\n\r\n  // Fetch the event data from api\r\n  useEffect(() => {\r\n    api\r\n      .get(`organizers/${params.organizer}/events/${params.event}`)\r\n      .then(({ data }) => {\r\n        setEvent(data);\r\n      });\r\n  }, [params]);\r\n\r\n  if (!event) return <></>;\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        {/* Card header */}\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h4>{event.name}</h4>\r\n          <Link\r\n            to={`/register/${params.organizer}/${params.event}`}\r\n            id=\"register\"\r\n          >\r\n            <button type=\"button\" className=\"btn btn-outline-primary login-btn\">\r\n              Register for this event\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* Render the agenda header */}\r\n        <div className=\"row border-bottom mb-1\">\r\n          <div className=\"col-4\"></div>\r\n          <div className=\"col-2\">9:00</div>\r\n          <div className=\"col-2\">11:00</div>\r\n          <div className=\"col-2\">13:00</div>\r\n          <div className=\"col-2\">15:00</div>\r\n        </div>\r\n\r\n        {/* Render the agenda */}\r\n        {event.channels.map((channel) => {\r\n          return (\r\n            <div className=\"row border-bottom\" key={channel.id}>\r\n              <div className=\"col-2 py-1 my-1 channel\">{channel.name}</div>\r\n              <div className=\"col-2\">\r\n                {channel.rooms.map((room) => {\r\n                  return (\r\n                    <div key={room.id} className=\"room p-1 my-1\">\r\n                      {room.name}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              <div className=\"col-8\">\r\n                {channel.rooms.map((room) => {\r\n                  return (\r\n                    <div key={room.id}>\r\n                      {room.sessions.map((session) => {\r\n                        return (\r\n                          <Link\r\n                            to={`/session/${params.organizer}/${params.event}/${session.id}`}\r\n                            className=\"session my-1 mr-1 d-inline-block text-reset border p-1\"\r\n                            key={session.id}\r\n                          >\r\n                            {session.title}\r\n                          </Link>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { api } from \"../api\";\r\n\r\nexport function List() {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  // Get Events from api\r\n  useEffect(() => {\r\n    api.get(\"events\").then(({ data }) =>\r\n      setEvents(\r\n        data\r\n          .map((event) => ({\r\n            ...event,\r\n            date: new Date(event.date).toDateString(),\r\n          }))\r\n          .sort((a, b) => new Date(a.date) - new Date(b.date))\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {events.map((event) => (\r\n        <Link\r\n          to={`/agenda/${event.organizer.slug}/${event.slug}`}\r\n          className=\"event text-reset text-decoration-none\"\r\n          key={event.id}\r\n        >\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{event.name}</h5>\r\n              <p className=\"card-text\">\r\n                Organizer: {event.organizer.name}, {event.date}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { api } from \"../api\";\r\n\r\nexport function Login({ setIsLoggedIn }) {\r\n  const history = useHistory();\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  // Login api call\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    if (lastname && code) {\r\n      api.post(\"/login\", { lastname, registration_code: code }).then(() => {\r\n        setIsLoggedIn(true);\r\n        history.push(\"/\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <main className=\"col-md-6 mx-sm-auto px-4 card\">\r\n          <div className=\"pt-3 pb-2 mb-3 border-bottom text-center\">\r\n            <h1 className=\"h2\">Login</h1>\r\n          </div>\r\n\r\n          <form className=\"form-signin\" onSubmit={login}>\r\n            <label htmlFor=\"lastname\">Lastname</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastname\"\r\n              name=\"lastname\"\r\n              className=\"form-control mb-3\"\r\n              placeholder=\"Lastname\"\r\n              autoFocus\r\n              required\r\n              onChange={(e) => setLastname(e.target.value)}\r\n            />\r\n\r\n            <label htmlFor=\"registration_code\">Registration Code</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"registration_code\"\r\n              name=\"registration_code\"\r\n              className=\"form-control mb-3\"\r\n              placeholder=\"Registration Code\"\r\n              required\r\n              onChange={(e) => setCode(e.target.value)}\r\n            />\r\n\r\n            <button\r\n              className=\"btn btn-lg btn-primary btn-block mb-3\"\r\n              id=\"login\"\r\n              type=\"submit\"\r\n            >\r\n              Sign in\r\n            </button>\r\n          </form>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { api } from \"../api\";\r\n\r\nexport function Register({ isLoggedIn }) {\r\n  // Use url params\r\n  const params = useParams();\r\n  const history = useHistory();\r\n\r\n  // Store the event data\r\n  const [event, setEvent] = useState();\r\n  const [ticket, setTicket] = useState();\r\n  const [selectedWs, setSelectedWs] = useState([]);\r\n\r\n  // Calculate additional cost\r\n  const additionalCost = useMemo(() => {\r\n    return selectedWs.reduce((sum, ws) => sum + parseInt(ws.cost, 10), 0);\r\n  }, [selectedWs]);\r\n\r\n  // Calculate ticket cost\r\n  const ticketCost = useMemo(() => {\r\n    return ticket ? parseInt(ticket.cost, 10) : 0;\r\n  }, [ticket]);\r\n\r\n  // workshops list\r\n  const workshops = useMemo(() => {\r\n    let ws = [];\r\n\r\n    // search for workshop-type sessions\r\n    event?.channels.forEach((channel) =>\r\n      channel.rooms.forEach((room) =>\r\n        room.sessions.forEach((session) => {\r\n          if (session.type === \"workshop\") {\r\n            ws.push(session);\r\n          }\r\n        })\r\n      )\r\n    );\r\n\r\n    return ws;\r\n  }, [event]);\r\n\r\n  // Toggle selected workshops\r\n  const toggleWs = (ws) => {\r\n    if (selectedWs.includes(ws)) {\r\n      setSelectedWs(selectedWs.filter((s) => s.id !== ws.id));\r\n    } else {\r\n      setSelectedWs([...selectedWs, ws]);\r\n    }\r\n  };\r\n\r\n  // Register api call\r\n  const register = () => {\r\n    api\r\n      .post(\r\n        `organizers/${params.organizer}/events/${params.event}/registration`,\r\n        { ticket_id: ticket.id, session_ids: selectedWs.map(({ id }) => id) }\r\n      )\r\n      .then(() => {\r\n        alert(\"Registration successful\");\r\n        history.push(`/agenda/${params.organizer}/${params.event}`);\r\n      });\r\n  };\r\n\r\n  // Fetch the event data from api\r\n  useEffect(() => {\r\n    api\r\n      .get(`organizers/${params.organizer}/events/${params.event}`)\r\n      .then(({ data }) => {\r\n        setEvent(data);\r\n      });\r\n  }, [params]);\r\n\r\n  // Check if logged in\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, isLoggedIn]);\r\n\r\n  if (!event) return <></>;\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        {/* Card header */}\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h4>{event.name}</h4>\r\n        </div>\r\n\r\n        {/* Tickets */}\r\n        <h5 className=\"font-weight-normal\">Select your ticket</h5>\r\n        <div className=\"row\">\r\n          {event.tickets.map((ticket) => {\r\n            return (\r\n              <div className=\"col-4 mb-3\" key={ticket.id}>\r\n                <div className=\"card shadow-sm\">\r\n                  <div className=\"card-body\">\r\n                    {/* Ticket radio */}\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input ticket\"\r\n                        type=\"radio\"\r\n                        name=\"ticket\"\r\n                        id={`ticket${ticket.id}`}\r\n                        value={ticket.id}\r\n                        disabled={!ticket.available}\r\n                        onChange={() => setTicket(ticket)}\r\n                      />\r\n\r\n                      {/* Ticket radio label */}\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor={`ticket${ticket.id}`}\r\n                      >\r\n                        <h5 className=\"card-title\">\r\n                          {ticket.name} - {ticket.cost}.-\r\n                        </h5>\r\n                        <p className=\"card-text\">\r\n                          {ticket.available\r\n                            ? ticket.description\r\n                            : \"Unavailable\"}\r\n                          &nbsp;\r\n                        </p>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* Workshops */}\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <h5 className=\"font-weight-normal mt-3\">\r\n              Select additional workshops you want to book\r\n            </h5>\r\n\r\n            {workshops.map((workshop) => {\r\n              return (\r\n                <div className=\"form-check\" key={workshop.id}>\r\n                  <input\r\n                    className=\"form-check-input workshop\"\r\n                    type=\"checkbox\"\r\n                    value={workshop.id}\r\n                    id={`ws${workshop.id}`}\r\n                    onChange={() => toggleWs(workshop)}\r\n                  />\r\n                  <label\r\n                    className=\"form-check-label\"\r\n                    htmlFor={`ws${workshop.id}`}\r\n                  >\r\n                    {workshop.title} - {workshop.cost}.-\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"col-6\">\r\n            {/* Checkout */}\r\n            <h5 className=\"mt-3 pr-3 text-right\">Checkout</h5>\r\n\r\n            <div className=\"d-flex justify-content-end\">\r\n              <table className=\"table w-auto\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Event ticket</td>\r\n                    <td id=\"event-cost\">{ticketCost}.-</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Additional workshops</td>\r\n                    <td id=\"additional-cost\">{additionalCost}.-</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>Total</th>\r\n                    <th id=\"total-cost\">{ticketCost + additionalCost}.-</th>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <div className=\"pr-3 text-right\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                id=\"purchase\"\r\n                onClick={register}\r\n                disabled={!ticket}\r\n              >\r\n                Purchase\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { api } from \"../api\";\r\n\r\nexport function Session() {\r\n  // Use url params\r\n  const params = useParams();\r\n\r\n  // Store the session data\r\n  const [session, setSession] = useState();\r\n\r\n  // Fetch the event data from api, then search session\r\n  useEffect(() => {\r\n    api\r\n      .get(`organizers/${params.organizer}/events/${params.event}`)\r\n      .then(({ data }) => {\r\n        let session;\r\n\r\n        // search for selected session\r\n        data.channels.forEach((channel) =>\r\n          channel.rooms.forEach((room) =>\r\n            room.sessions.forEach((s) => {\r\n              if (parseInt(s.id, 10) === parseInt(params.session, 10)) {\r\n                session = s;\r\n              }\r\n            })\r\n          )\r\n        );\r\n\r\n        setSession(session);\r\n      });\r\n  }, [params]);\r\n\r\n  if (!session) return <></>;\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h4>\r\n          {session.title} - {session.type}\r\n        </h4>\r\n        <p>{session.description}</p>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">Speaker</div>\r\n          <div className=\"col\">{session.speaker}</div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">Start</div>\r\n          <div className=\"col\">{session.start}</div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">End</div>\r\n          <div className=\"col\">{session.end}</div>\r\n        </div>\r\n\r\n        {session.cost && (\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">Cost</div>\r\n            <div className=\"col\">{session.cost}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Agenda } from \"./pages/Agenda\";\nimport { List } from \"./pages/List\";\nimport { Login } from \"./pages/Login\";\nimport { Register } from \"./pages/Register\";\nimport { Session } from \"./pages/Session\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  return (\n    <>\n      <Router>\n        <Header isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\n        <main className=\"p-4\">\n          <Route path=\"/login\">\n            <Login setIsLoggedIn={setIsLoggedIn} />\n          </Route>\n          <Route path=\"/agenda/:organizer/:event\">\n            <Agenda />\n          </Route>\n          <Route path=\"/register/:organizer/:event\">\n            <Register isLoggedIn={isLoggedIn} />\n          </Route>\n          <Route path=\"/session/:organizer/:event/:session\">\n            <Session />\n          </Route>\n          <Route path=\"/\" exact>\n            <List />\n          </Route>\n        </main>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}